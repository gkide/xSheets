---
tags: [ shell, bash, zsh ]
---
# 变量定义, 变量初始化
VarName="test"           # 创建普通变量, 等号两边不能有空格
local VarName="test"     # 创建局部变量, local 定义函数体内局部变量, 函数体外无法访问
readonly VarName="value" # 创建只读变量, 这种变量不可以被修改
echo $VarName            # 变量引用
echo ${VarName}          # 变量引用
unset VarName            # 删除变量, 只读变量无法删除
# 变量赋值
=   # 直接覆盖变量的值
+=  # 将值追加在变量已有值的后面
:=  # 如果变量不为空，则赋值；否则忽略

# 获取字符串长度
echo "abc" | wc -L
expr length "abc"
xyz="ab"; expr length $xyz
xyz="abx"; echo ${#xyz}
echo "Alex" | awk '{ print length($0) }'
${#VAR} # 计算并显示 VAR 变量字符串的长度

# 变量扩展

echo "${VAR}" # 用花括号将变量名括起来，用作变量名的界定符号
echo $(who)   # 用圆括号将变量名括起来，将其视为 shell 命令执行

${VAR#*STR}   # 从左向右截取第一个 STR 后的字符串
${VAR##*STR}  # 从左向右截取最后一个 STR 后的字符串

${VAR#*.}     # 去掉变量 VAR 左起的  第一个 . 字符及其左边的内容，返回左起  第一个 .（不含该字符）字符右边的内容
${VAR##*/}    # 去掉变量 VAR 左起的最后一个 / 字符及其左边的内容，返回左起最后一个 /（不含该字符）字符右边的内容
${VAR##*.}    # 去掉变量 VAR 左起的最后一个 . 字符及其左边的内容，返回左起最后一个 .（不含该字符）字符右边的内容

${VAR%STR*}   # 从右向左截取第一个 STR 后的字符串
${VAR%%STR*}  # 从右向左截取最后一个 STR 后的字符串

${VAR%/*}     # 去掉变量 VAR 右起的  第一个 / 字符及其右边的内容，返回右起  第一个 /（不含该字符）字符左边的内容
${VAR%%.*}    # 去掉变量 VAR 右起的最后一个 . 字符及其右边的内容，返回右起最后一个 .（不含该字符）字符左边的内容
${VAR%%/*}    # 去掉变量 VAR 右起的最后一个 / 字符及其右边的内容，返回右起最后一个 /（不含该字符）字符左边的内容

${VAR:-value} # 如果 VAR 未定以或为 null 值，则使用 value 作为 VAR 的值进行替换，但 VAR 变量保持不变
${VAR:=value} # 如果 VAR 未定以或为 null 值，则将 value 赋值给 VAR, 并用 value 进行替换
${#VAR}       # 如果 VAR 是 * 或 @，则用位置参数的个数进行替换，否则计算字符串字符(字节)个数

############
# Also See #
############
cheat -t zsh
cheat -t bash
cheat -t shell
